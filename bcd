#!/usr/bin/env python3

import argparse
parser = argparse.ArgumentParser(description="Convert decimal, hexidecimal or octal number to BCD or convert BCD to decimal.")
group = parser.add_mutually_exclusive_group()
parser.add_argument("number", type=str, help="Decimal, hex or BCD number to convert.")
group.add_argument("-b", "--bin", help="Convert BCD number to decimal.", action="store_true")
group.add_argument("-d", "--decimal", help="Convert decimal number to BCD.", action="store_true")
group.add_argument("-x", "--hex", help="Convert hex number to BCD.", action="store_true")
group.add_argument("-o", "--octal", help="Convert octal number to BCD.", action="store_true")
args = parser.parse_args()

def intToBCD(number: int):
    bcdString = ""
    for digit in str(number):
        try:
            binaryDigit = bin(int(digit))[2:]
            bcdString += "0" * (4 - len(binaryDigit)) + binaryDigit
        except ValueError:
            print("Invalid input.")
    print(bcdString)

def bcdToInt(number: str):
    intStr = ""
    if len(number) % 4 != 0:
        print("Invalid BCD.")
    else:
        for i in range(len(number) // 4):
            section = number[i*4:i*4+4]
            if section == "0000":
                intStr += "0"
            elif section == "0001":
                intStr += "1"
            elif section == "0010":
                intStr += "2"
            elif section == "0011":
                intStr += "3"
            elif section == "0100":
                intStr += "4"
            elif section == "0101":
                intStr += "5"
            elif section == "0110":
                intStr += "6"
            elif section == "0111":
                intStr += "7"
            elif section == "1000":
                intStr += "8"
            elif section == "1001":
                intStr += "9"
            else:
                print("Invalid BCD.")
                break
        print(intStr)

def main():
    if args.bin or args.decimal or args.hex or args.octal:
        if args.bin:
            if args.number[0:2] == "0b":
                bcdToInt(args.number[2:])
            else:
                bcdToInt(args.number)
        elif args.hex:
            intToBCD(int(args.number, 16))
        elif args.octal:
            intToBCD(int(args.number, 8))
        else:
            intToBCD(int(args.number))
    else:
        if args.number[0:2] == "0x":
            intToBCD(int(args.number, 16))
        elif args.number[0:2] == "0b":
            bcdToInt(args.number[2:])
        elif args.number[0] == "0":
            intToBCD(int(args.number, 8))
        else:
            intToBCD(int(args.number))

if __name__ == "__main__":
    main()
    




